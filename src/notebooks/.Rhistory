} else {
return(x)
}
})
x <- df_xy[, colnames(df_xy) != y_value]
df_xy
df[['org.resource']]
typeof(df[['org.resource']])
typeof(df)
typeof(df_xy)
df_xy = na.omit(
df[,c(x_values_categorical, x_values_continous, y_value)]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
}, nm = names(df_xy))
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
View(df_xy)
df_xy = na.omit(
df[,c(x_values_categorical, x_values_continous, y_value)]
)
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
colnames(df_xy) <- col_names
names(df_xy) <- col_names
x <- df_xy[, colnames(df_xy) != y_value]
x <- df_xy[, names(df_xy) != y_value]
df_xy <- as.matrix(df_xy)
View(df_xy)
View(df_xy)
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
names(df_xy) <- col_names
x <- df_xy[colnames(df_xy) != y_value]
x <- df_xy[names(df_xy) != y_value]
y <- df_xy['duration_seconds']
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
fit <- drbart(y, x, nburn=100, nsim=10, nthin=10,
variance='ux',
mean_cuts=enc2
)
as.matrix(x)
as.vector(x)
x <- as.vector(df_xy[names(df_xy) != y_value])
y <- as.vector(df_xy['duration_seconds'])
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
fit <- drbart(y, x, nburn=100, nsim=10, nthin=10,
variance='ux',
mean_cuts=enc2
)
x <- df_xy[names(df_xy) != y_value]
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
fit <- drbart(y, x, nburn=100, nsim=10, nthin=10,
variance='ux',
mean_cuts=enc2
)
x <- as.matrix(df_xy[names(df_xy) != y_value])
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
fit <- drbart(y, x, nburn=100, nsim=10, nthin=10,
variance='ux',
mean_cuts=enc2
)
dim(x)
x <- matrix(
unlist(df_xy[names(df_xy) != y_value]),
ncol = length(col_names) - 1
)
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
fit <- drbart(y, x, nburn=100, nsim=10, nthin=10,
variance='ux',
mean_cuts=enc2
)
View(x)
lapply(x_values_continous, function(name){
print(name)
})
lapply(x_values_continous, function(name){
print(min(df_xy[[name]]))
print(name)
})
lapply(x_values_continous, function(name){
print(max(df_xy[[name]]))
print(name)
})
lapply(x_values_continous, function(name){
print(df_xy[[name]])
print(name)
})
df_xy[['case.AMOUNT_REQ_start']]
mean(df_xy[['case.AMOUNT_REQ_start']])
lapply(x_values_continous, function(name){
print(mean(df_xy[[name]]))
print(name)
})
length(df_xy[['case.AMOUNT_REQ_start']])
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]], max(df_xy[[name]],
length.out = min(
10000,
length(df_xy[[name]])
))))
)
})
name <- 'case.AMOUNT_REQ_start'
seq(min(df_xy[[name]], max(df_xy[[name]],
length.out = min(
10000,
length(df_xy[[name]])
))))
length(df_xy[[name]])
max(df_xy[[name]]
)
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]], max(df_xy[[name]]),
length.out = min(
10000,
length(df_xy[[name]])
)))
)
})
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]]), max(df_xy[[name]]),
length.out = min(
10000,
length(df_xy[[name]])
))
)
})
fit <- drbart(y, x, nburn=100, nsim=10, nthin=10,
variance='ux',
mean_cuts=c(enc2, enc3)
)
write_json(c(x_values_categorical, x_values_continous), path = 'x_variables.json')
library(cleandata)
library(devtools)
library(jsonlite)
devtools::install_github('ltsstar/drbart', ref = 'main')
library(drbart)
#load_all('~/Documents/drbart')
setwd("~/Documents/TaskExecutionTimeMining/src/notebooks")
df <- read.csv('./bpic_clean.csv')
x_values_categorical <- c('org.resource', 'concept.name')
x_values_continous <- c('case.AMOUNT_REQ_start')
y_value <- 'duration_seconds'
nburn <- 10000
nsim <- 100
nthin <- 100
#
# STATIC PART
#
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
names(df_xy) <- col_names
x <- matrix(
unlist(df_xy[names(df_xy) != y_value]),
ncol = length(col_names) - 1
)
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]]), max(df_xy[[name]]),
length.out = min(
10000,
length(df_xy[[name]])
))
)
})
fit <- drbart(y, x, nburn=nburn, nsim=nsim, nthin=nthin,
variance='ux',
mean_cuts=c(enc2, enc3)
)
#
# DYNAMIC PART
#
#setwd("~/Documents/TaskExecutionTimeMining/src/notebooks")
file_location < - './bpic_clean.csv'
#
# DYNAMIC PART
#
#setwd("~/Documents/TaskExecutionTimeMining/src/notebooks")
file_location < - './bpic_clean.csv'
#
# DYNAMIC PART
#
#setwd("~/Documents/TaskExecutionTimeMining/src/notebooks")
file_location <- './bpic_clean.csv'
x_values_categorical <- c('org.resource', 'concept.name')
x_values_continous <- c('case.AMOUNT_REQ_start')
y_value <- 'duration_seconds'
nburn <- 10000
nsim <- 100
nthin <- 100
#
# STATIC PART
#
library(cleandata)
library(devtools)
library(jsonlite)
devtools::install_github('ltsstar/drbart', ref = 'main')
library(drbart)
#load_all('~/Documents/drbart')
df <- read.csv(file_location)
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
names(df_xy) <- col_names
x <- matrix(
unlist(df_xy[names(df_xy) != y_value]),
ncol = length(col_names) - 1
)
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]]), max(df_xy[[name]]),
length.out = min(
10000,
length(df_xy[[name]])
))
)
})
fit <- drbart(y, x, nburn=nburn, nsim=nsim, nthin=nthin,
variance='ux',
mean_cuts=c(enc2, enc3)
)
file_location <- './artificial_start_end_2.csv'
x_values_categorical <- c('org.resource', 'concept.name')
x_values_continous <- c()
y_value <- 'duration_seconds'
nburn <- 10000
nsim <- 100
nthin <- 100
library(cleandata)
library(devtools)
library(jsonlite)
devtools::install_github('ltsstar/drbart', ref = 'main')
library(drbart)
df <- read.csv(file_location)
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
x_values_continous <- c('seconds_in_day')
y_value <- 'duration_seconds'
nburn <- 10000
nsim <- 100
nthin <- 100
library(cleandata)
library(devtools)
library(jsonlite)
devtools::install_github('ltsstar/drbart', ref = 'main')
library(drbart)
df <- read.csv(file_location)
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
names(df_xy) <- col_names
x <- matrix(
unlist(df_xy[names(df_xy) != y_value]),
ncol = length(col_names) - 1
)
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]]), max(df_xy[[name]]),
length.out = min(
10000,
length(df_xy[[name]])
))
)
})
x_values_categorical <- c('org.resource',
'concept.name',
'X1',
'Clark',
'Jane',
'Joe',
'Karsten',
'DIAGNOSIS',
'REPAIR')
x_values_continous <- c('seconds_in_day')
y_value <- 'duration_seconds'
nburn <- 10000
nsim <- 100
nthin <- 100
library(cleandata)
library(devtools)
library(jsonlite)
devtools::install_github('ltsstar/drbart', ref = 'main')
library(drbart)
df <- read.csv(file_location)
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
names(df_xy) <- col_names
x <- matrix(
unlist(df_xy[names(df_xy) != y_value]),
ncol = length(col_names) - 1
)
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]]), max(df_xy[[name]]),
length.out = min(
10000,
length(df_xy[[name]])
))
)
})
x_values_categorical <- c('org.resource',
'concept.name')
x_values_continous <- c('seconds_in_day')
y_value <- 'duration_seconds'
nburn <- 10000
nsim <- 100
nthin <- 100
library(cleandata)
library(devtools)
library(jsonlite)
devtools::install_github('ltsstar/drbart', ref = 'main')
library(drbart)
df <- read.csv(file_location)
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
names(df_xy) <- col_names
x <- matrix(
unlist(df_xy[names(df_xy) != y_value]),
ncol = length(col_names) - 1
)
y <- df_xy[['duration_seconds']]
enc2 <- lapply(enc, function(v) {as.numeric(labels(v))})
enc3 <- lapply(x_values_continous, function(name){
return(
seq(min(df_xy[[name]]), max(df_xy[[name]]),
length.out = min(
10000,
length(df_xy[[name]])
))
)
})
x_values_categorical <- c('org.resource',
'concept.name',
'X1',
'Clark',
'Jane')
x_values_continous <- c('seconds_in_day')
y_value <- 'duration_seconds'
nburn <- 10000
nsim <- 100
nthin <- 100
library(cleandata)
library(devtools)
library(jsonlite)
devtools::install_github('ltsstar/drbart', ref = 'main')
library(drbart)
df <- read.csv(file_location)
col_names <- c(x_values_categorical, x_values_continous, y_value)
df_xy = na.omit(
df[,col_names]
)
enc <- lapply(x_values_categorical, function(x_value) {unique(df_xy[,x_value])})
df_xy <- lapply(names(df_xy), function(col_name) {
x <- df_xy[[col_name]]
names(col_name)[-1] <- col_name
print(col_name)
if(!is.null(col_name)
&& col_name %in% x_values_categorical) {
return(as.numeric(factor(x, levels = unique(x))))
} else {
return(x)
}
})
names(df_xy) <- col_names
x <- matrix(
unlist(df_xy[names(df_xy) != y_value]),
ncol = length(col_names) - 1
)
y <- df_xy[['duration_seconds']]
